"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("uint8arrays/from-string"),t=require("uint8arrays/to-string"),r=require("libp2p-crypto"),n=require("multiformats/hashes/identity"),i=require("multiformats/bases/base36"),a=require("multiformats/cid"),s=require("multiformats/hashes/digest"),o=require("ipns"),c=require("cborg"),u=require("./service.cjs"),d=require("@web-std/fetch");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function y(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var f=y(s),p=y(o),m=y(c),w=l(d);const b=()=>new Date(Date.now()+31536e6).toISOString(),h=new u;class v{constructor(e){this._pubKey=e}get bytes(){const e=f.create(n.identity.code,this._pubKey.bytes);return a.CID.createV1(114,e).bytes}toString(){const e=f.create(n.identity.code,this._pubKey.bytes);return a.CID.createV1(114,e).toString(i.base36)}}class g extends v{constructor(e){super(e.public),this._privKey=e}get key(){return this._privKey}}function q(e){const t=a.CID.parse(e,i.base36);if(114!==t.code)throw new Error(`Invalid key, expected 114 codec code but got ${t.code}`);const n=r.keys.unmarshalPublicKey(f.decode(t.multihash.bytes).bytes);return new v(n)}class _{constructor(e,t,r,n){if(this._name=e,"string"!=typeof t)throw new Error("invalid value");if(this._value=t,"bigint"!=typeof r)throw new Error("invalid sequence number");if(this._sequence=r,"string"!=typeof n)throw new Error("invalid validity");this._validity=n}get name(){return this._name}get value(){return this._value}get sequence(){return this._sequence}get validity(){return this._validity}static encode(e){return m.encode({name:e._name.toString(),value:e._value,sequence:e._sequence,validity:e._validity})}static decode(e){const t=m.decode(e),r=q(t.name);return new _(r,t.value,BigInt(t.sequence),t.validity)}}async function S(e){const t=await e;if(t.ok)return t;let r;try{const e=await t.json();r=new Error(e.message)}catch(e){r=new Error(`unexpected response from API, cannot parse error response. Received status: ${t.status}`)}throw r}exports.Name=v,exports.Revision=_,exports.WritableName=g,exports.create=async function(){const e=await r.keys.generateKeyPair("Ed25519",2048);return new g(e)},exports.from=async function(e){const t=await r.keys.unmarshalPrivateKey(e);return new g(t)},exports.increment=async function(e,t){const r=e.sequence+1n;return new _(e.name,t,r,b())},exports.parse=q,exports.publish=async function(r,n,i=h){const a=new URL(`name/${r.name.toString()}`,i.endpoint),s=await p.create(n,e.fromString(r.value),r.sequence,new Date(r.validity).getTime()-Date.now());await i.waitForRateLimit(),await S(w.default(a.toString(),{method:"POST",body:t.toString(p.marshal(s),"base64pad")}))},exports.resolve=async function(n,i=h){const s=new URL(`name/${n.toString()}`,i.endpoint);await i.waitForRateLimit();const o=await S(w.default(s.toString())),{record:c}=await o.json(),u=p.unmarshal(e.fromString(c,"base64pad")),d=a.CID.decode(n.bytes),l=r.keys.unmarshalPublicKey(f.decode(d.multihash.bytes).bytes);return await p.validate(l,u),new _(n,t.toString(u.value),u.sequence,t.toString(u.validity))},exports.v0=async function(e,t){return new _(e,t,0n,b())};
//# sourceMappingURL=index.cjs.map
